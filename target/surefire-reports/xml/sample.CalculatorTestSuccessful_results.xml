<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="testCaculate"
           tests="4"
           failures="2"
           errors="0"
           skipped="0"
           time="0.000">
  <properties />
            <testcase name="testSubstraction" time="0.000" classname="sample.CalculatorTestSuccessful">
                <failure type="java.lang.AssertionError"
                  message="expected [true] but found [false]"
              >
<![CDATA[java.lang.AssertionError: expected [true] but found [false]
  org.testng.Assert.fail(Assert.java:94)
  org.testng.Assert.failNotEquals(Assert.java:494)
  org.testng.Assert.assertTrue(Assert.java:42)
  org.testng.Assert.assertTrue(Assert.java:52)
  sample.CalculatorTestSuccessful.testSubstraction(CalculatorTestSuccessful.java:73)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:606)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
  org.testng.TestRunner.privateRun(TestRunner.java:767)
  org.testng.TestRunner.run(TestRunner.java:617)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
  org.testng.SuiteRunner.run(SuiteRunner.java:240)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
  org.testng.TestNG.run(TestNG.java:1057)
  org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:217)
  org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
  org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:92)
  org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
  org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
  org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
      </failure>

          </testcase>
            <testcase name="testSum" time="0.000" classname="sample.CalculatorTestSuccessful">
                <failure type="java.lang.AssertionError"
                  message="expected [12] but found [7]"
              >
<![CDATA[java.lang.AssertionError: expected [12] but found [7]
  org.testng.Assert.fail(Assert.java:94)
  org.testng.Assert.failNotEquals(Assert.java:494)
  org.testng.Assert.assertEquals(Assert.java:123)
  org.testng.Assert.assertEquals(Assert.java:370)
  org.testng.Assert.assertEquals(Assert.java:380)
  sample.CalculatorTestSuccessful.testSum(CalculatorTestSuccessful.java:38)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:606)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
  org.testng.TestRunner.privateRun(TestRunner.java:767)
  org.testng.TestRunner.run(TestRunner.java:617)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
  org.testng.SuiteRunner.run(SuiteRunner.java:240)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
  org.testng.TestNG.run(TestNG.java:1057)
  org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:217)
  org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
  org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:92)
  org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
  org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
  org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="testDivisionException" time="0.000" classname="sample.CalculatorTestSuccessful" />
                <testcase name="testDivison" time="0.000" classname="sample.CalculatorTestSuccessful" />
      
</testsuite>
